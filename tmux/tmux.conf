# Set the prefix to ^A.
unbind-key C-b
set -g prefix ^A
bind-key a send-prefix

# ^A twice to send ^A to active application
bind-key C-a send-prefix

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s split-window -v
bind-key v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind-key < resize-pane -L 1
bind-key > resize-pane -R 1
bind-key - resize-pane -D 1
bind-key + resize-pane -U 1

# vi-style controls for copy mode
setw -g mode-keys vi

# In copy mode, `v` to begin selection and `y` to copy
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Run reattach-to-user-namespace when opening a new window/pane.
#set-option -g default-command "reattach-to-user-namespace -l bash"

# Enable mouse mode
set -g mouse on

# Allow scrolling with mouse wheel/track pad.
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Toggle mouse on with ^A m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off with ^A M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'
